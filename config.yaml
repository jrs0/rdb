# This file controls the behaviour of a routine that generates a dataset
# of information relating to patients who have had acute coronary syndromes
# or PCI procedures. The script generates a dataset where each row is an
# index acs/pci, and the columns contain characteristics of the index event
# and other diagnostic/procedural episodes that happened either before or
# after the index event.
#
# output columns:
#  index_spell_date: The date of the spell containing the index episode.
#  index_type: "ACS" or "PCI" depending on the type of index episode
#  age: The age of the patient at the index spell
#  <diagnosis_name>_before: The number of occurances of the diagnosis
#      identified by <diagnosis_name> (a group of ICD codes) in episodes
#      in the period <months_before> before the index event.
#  <diagnosis_name>_after: The number of occurances of the diagnosis
#      identified by <diagnosis_name> (a group of ICD codes) in episodes
#      in the period <months_after> after the index event.
#  bleed_after: The number of bleeding events (defined by a group of ICD
#      codes) in the <months_after> period after the index event.
#  ischaemia_after: The number of ischaemic events (defined by a group
#      of ICD codes) in the <months_after> period after the index event.
#  death_after: Whether the patient died in the following <months_after>
#      period
#  cardiovascular_death: Whether the death was associated with a
#      cardiovascular ICD code (NA if no death_after)
#  ischaemia_death: Whether the death was associated with an ischaemia
#      ICD code (NA if no death_after)
#  

connection: 
  dsn: xsw
  #cred: /root/db.secret.yaml

parser:
  #diagnosis_file: ../../icd10.yaml
  #procedure_file: ../../opcs4.yaml
  diagnosis_file: icd10.yaml
  procedure_file: opcs4.yaml
  
sql_query:
  # Set a limit on the number of returned rows (optional)
  #result_limit: 1000000
  result_limit: 5000
  primary_diagnosis: diagnosisprimary_icd
  secondary_diagnoses:
  - diagnosis1stsecondary_icd
  - diagnosis2ndsecondary_icd
  - diagnosis3rdsecondary_icd
  - diagnosis4thsecondary_icd
  - diagnosis5thsecondary_icd
  - diagnosis6thsecondary_icd
  - diagnosis7thsecondary_icd
  - diagnosis8thsecondary_icd
  - diagnosis9thsecondary_icd
  - diagnosis10thsecondary_icd
  - diagnosis11thsecondary_icd
  - diagnosis12thsecondary_icd
  - diagnosis13thsecondary_icd
  - diagnosis14thsecondary_icd
  - diagnosis15thsecondary_icd
  - diagnosis16thsecondary_icd
  - diagnosis17thsecondary_icd
  - diagnosis18thsecondary_icd
  - diagnosis19thsecondary_icd
  - diagnosis20thsecondary_icd
  - diagnosis21stsecondary_icd
  - diagnosis22ndsecondary_icd
  - diagnosis23rdsecondary_icd

  # Defines how procedures are processed
  primary_procedure: primaryprocedure_opcs
  secondary_procedures: 
  # Note the first secondary is labelled 2nd
  - procedure2nd_opcs
  - procedure3rd_opcs
  - procedure4th_opcs
  - procedure5th_opcs
  - procedure6th_opcs
  - procedure7th_opcs
  - procedure8th_opcs
  - procedure9th_opcs
  - procedure10th_opcs
  - procedure11th_opcs
  - procedure12th_opcs
  - procedure13th_opcs
  - procedure14th_opcs
  - procedure15th_opcs
  - procedure16th_opcs
  - procedure17th_opcs
  - procedure18th_opcs
  - procedure19th_opcs
  - procedure20th_opcs
  - procedure21st_opcs
  - procedure22nd_opcs
  - procedure23rd_opcs
  - procedure24th_opcs

index_event:
  start_date: "2015-1-1" 
  end_date: "2023-1-1"
  include:
    diagnoses: [acs]
    procedures: [pci]
    stemi_flag: acs_stemi
  
code_groups:
  acs: [acs_stemi, acs_nstemi, acs_unstable_angina]
  pci: [pci]
  cardiac_death:
  - acs_stemi
  - acs_nstemi
  - acs_unstable_angina
  - atrial_fib
  - chronoic_ischaemia_heart_disease
  - other_ischaemic_heart_diseases
  stemi: [acs_stemi]
  
data_sources:
  hospital_episodes:
    table: abi.dbo.vw_apc_sem_001
    nhs_number: aimtc_pseudo_nhs
    spell_id: pbrspellid

  mortality:
      table: abi.civil_registration.mortality
      nhs_number: Derived_Pseudo_NHS
      date_of_death: REG_DATE_OF_DEATH
      cause_of_death: S_UNDERLYING_COD_ICD10

in_memory:
  num_patients: 500
  seed: 47

print: true
